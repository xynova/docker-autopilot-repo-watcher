---

- name: Get Old version container IDs
  shell: >
     APP_POD_ID=$(docker -H {{ DOCKER_HOST }} ps 
     --filter label=version 
     --filter label=group={{ DEPLOYMENT_GROUP }}
     --filter name={{ NETWORK_CONTAINER }} 
     -q) 
     && docker  -H {{ DOCKER_HOST }} ps 
     --filter label=version 
     --filter label=group={{ DEPLOYMENT_GROUP }}
     --filter before=${APP_POD_ID:=EmptyID}
     -q
  register: ID_LIST
  ignore_errors: true
  changed_when: false

- name: Remove Old containers by ID
  shell: >
    docker -H {{ DOCKER_HOST }} stop {{ item }} 
    && docker -H {{ DOCKER_HOST }} rm -f {{ item }}
  with_items: "{{ ID_LIST.stdout_lines }}"
  when: ID_LIST is defined

- name: Get a list of old git repo dirs
  shell: >
    ls {{ GITREPOS_DIR }} | grep {{ NEW_VERSION }} --invert-match
  register: DIR_LIST
  changed_when: false
  failed_when: false

- name: Remove Old git repos
  file: 
    path: "{{ GITREPOS_DIR }}/{{ item }}" 
    state: absent
  with_items: "{{ DIR_LIST.stdout_lines }}" 

