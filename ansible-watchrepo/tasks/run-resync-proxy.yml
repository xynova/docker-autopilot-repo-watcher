---

- name: Ensure gateway proxy service
  shell: >
    docker -H {{ DOCKER_HOST }} run --restart unless-stopped -d 
    -p 80:80 
    -v {{ DOCKERDATA_DIR }}/gateway-nginx/:/etc/nginx/conf.d:z  
    --name gateway-nginx 
    docker.io/library/nginx:latest 
    || docker -H {{ DOCKER_HOST }} restart gateway-nginx
  register: COMMAND_RESULT
  ignore_errors: true 
  failed_when: "COMMAND_RESULT.stderr and 'is already in use by container' not in COMMAND_RESULT.stderr"
  changed_when: COMMAND_RESULT.stdout != ""

- name: Ensure gateway configuration for deployment group
  template:
    src: "{{ DOCKERDATA_DIR }}/gateway-confd/conf.d/generation-task.toml.j2"
    dest: "{{ DOCKERDATA_DIR }}/gateway-confd/conf.d/{{ DEPLOYMENT_GROUP }}-task.toml"

- name: Process new gateway proxy configuration from etcd
  shell: >
    docker -H {{ DOCKER_HOST }} run --restart unless-stopped -d  
    -v {{ DOCKERDATA_DIR }}/gateway-confd:/etc/confd:z 
    -v {{ DOCKERDATA_DIR }}/gateway-nginx:/tmp/confd-results:z 
    -u {{ UID_SERVICES }} 
    --cap-drop=all
    --name gateway-confd 
    node.local/confd:latest 
    -node http://{{ HOST_IP }}:2379 -watch -interval 1000 
    || docker -H {{ DOCKER_HOST }} restart gateway-confd
  register: COMMAND_RESULT
  ignore_errors: true 
  failed_when: "COMMAND_RESULT.stderr and 'is already in use by container' not in COMMAND_RESULT.stderr and 'INFO Backend nodes set to' not in COMMAND_RESULT.stderr"
  changed_when: COMMAND_RESULT.stderr != ""

- name: Reload gateway proxy so it reads new reload configuration
  shell: >
    docker -H {{ DOCKER_HOST }} exec gateway-nginx 
    /usr/sbin/nginx -s reload 
